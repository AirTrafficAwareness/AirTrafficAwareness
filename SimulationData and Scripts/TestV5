import requests
import json
#import APIKey
import time

## Assume distance between each degree of latitude is 69 miles
## Assume distance between each degree of longtitude is 69 miles
## 250 Knots == 281 mph,  700 Knots == 805 mph
## refresh rate once every second
## Test scenario travelling 700 knots past Newark Airport for 5 seconds
## assume range is 34.5 miles (.5 degree of lat/long), actual TCAS range is 40 miles

username = "tonditfk"
apiKey = "XXXXXXXXXXXXXXXXXXXXXXXX"
fxmlUrl = "http://flightxml.flightaware.com/json/FlightXML2/"
latlow = 39.6895
lathigh = 40.1895
longlow = -73.1745
longhigh = -73.6745

def calculateRange():
    payload = ('{range lat ' + latlow + ' ' + lathigh + '}'and' {range lon ' + longlow + ' ' + longhigh + '}'and' {> gs 0}'and' {true inAir}'and' {= lastPositionTime ' + timestr + '}'and' {!= lastPositionTime 0}')
    try:
        response = requests.get(fxmlUrl + "SearchBirdseyeInFlight", params=payload, auth=(username, apiKey))
        print(response.json())
        decodedResponse = response.json()
        with open('TestCase1', "a") as file:
            file.write(json.dumps(decodedResponse, indent=2, sort_keys=True))


    except requests.exceptions.HTTPError as e:
        print(e)

for i in range(0,10):
    latlow = latlow + 0.0034
    lathigh = lathigh + 0.0034
    longlow = longlow + 0.0034
    longhigh = longhigh + 0.0034
    latlowstr = str(latlow)
    lathighstr = str(lathigh)
    longlowstr = str(longlow)
    longhighstr = str(longhigh)
    timet = time.time()
    timestr = str(timet)

    payload = payload = ('{= lastPositionTime ' + timestr + '}'and' {!= lastPositionTime 0}'and'{range lat ' + latlowstr + ' ' + lathighstr + '}'and' {range lon ' + longlowstr + ' ' + longhighstr + '}'and' {> gs 0}'and' {true inAir}')
    try:
        response = requests.get(fxmlUrl + "SearchBirdseyeInFlight", params=payload, auth=(username, apiKey))
        print(response.json())
        decodedResponse = response.json()
        with open('TestCase1', "a") as file:
            file.write(json.dumps(decodedResponse, indent=2, sort_keys=True))


    except requests.exceptions.HTTPError as e:
        print(e)
    time.sleep(1)